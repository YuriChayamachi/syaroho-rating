name: Docker Image CI (Staging)

#on:
#  push:
#    branches:
#      - develop

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest-stg -t $ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short HEAD) .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-stg
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short HEAD)
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short HEAD)"

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION_STG }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        cluster: ${{ secrets.ECS_CLUSTER }}
